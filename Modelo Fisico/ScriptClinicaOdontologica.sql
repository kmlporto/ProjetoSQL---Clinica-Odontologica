-- MySQL Script generated by MySQL Workbench
-- sáb 07 jul 2018 09:00:48 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
-- Adpatado ao PostGres pelo Grupo



-- RODAR NO DB CLINICA;
-- -----------------------------------------------------
-- Schema 
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS cli CASCADE ;

CREATE SCHEMA IF NOT EXISTS cli;

-- -----------------------------------------------------
-- Table convenio
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.convenio ;

CREATE TABLE IF NOT EXISTS cli.convenio (
  idconvenio INT NOT NULL,
  descconvenio VARCHAR(45) NOT NULL,
  taxaDesconto Numeric(10,2) NOT NULL,
  CONSTRAINT PK_convenio_convenio PRIMARY KEY (idconvenio));;


-- -----------------------------------------------------
-- Table pessoa
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.pessoa;

CREATE TABLE IF NOT EXISTS cli.pessoa (
  idpessoa INT NOT NULL,
  cpf VARCHAR(11) NOT NULL,
  nome VARCHAR(60) NOT NULL,
  tipo VARCHAR(1) NOT NULL,
  sexo VARCHAR(1) NULL,
  dataN DATE NULL,
  cep VARCHAR(9) NULL,
  logradouro VARCHAR(45) NULL,
  bairro VARCHAR(45) NULL,
  n INT NULL,
  complemento VARCHAR(60) NULL,
  telefone INT NULL,
  cro VARCHAR(45) NULL,
  dataAdmissao DATE NULL,
  matricula VARCHAR(45) NULL,
  idconvenio INT NULL,
  numcarteira VARCHAR(45) NULL,
  CONSTRAINT PK_pessoa PRIMARY KEY (idpessoa),
  CONSTRAINT CK_pessoa_tipo CHECK (UPPER(tipo) in ('P','D','F')),
  CONSTRAINT CK_pessoa_sexo CHECK (UPPER(sexo) in ('F','M')),
  CONSTRAINT AK_pessoa_Telefone UNIQUE (telefone),
  CONSTRAINT AK_pessoa_matricula UNIQUE (matricula),
  CONSTRAINT AK_pessoa_CPF UNIQUE (cpf),
  CONSTRAINT AK_pessoa_CRO UNIQUE (cro),
  CONSTRAINT AK_pessoa_numcarteira UNIQUE (numcarteira),
  CONSTRAINT FK_convenio_pessoa FOREIGN KEY (idconvenio) REFERENCES cli.convenio);


-- -----------------------------------------------------
-- Table anamnese
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.anamnese ;

CREATE TABLE IF NOT EXISTS cli.anamnese (
  idanamnese INT NOT NULL,
  diabetica boolean NULL,
  cardiaca boolean NULL,
  descAlergiaMed VARCHAR(100) NULL,
  CONSTRAINT PK_anamnese PRIMARY KEY (idanamnese));


-- -----------------------------------------------------
-- Table medicamento
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.medicamento ;

CREATE TABLE IF NOT EXISTS cli.medicamento (
  idmedicamento INT NOT NULL,
  nome VARCHAR(45) NOT NULL,
  CONSTRAINT PK_medicamento PRIMARY KEY (idmedicamento));


-- -----------------------------------------------------
-- Table odontograma
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.odontograma ;

CREATE TABLE IF NOT EXISTS cli.odontograma (
  idodontograma INT NOT NULL,
  CONSTRAINT PK_odontograma PRIMARY KEY (idodontograma));


-- -----------------------------------------------------
-- Table documento
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.documento ;

CREATE TABLE IF NOT EXISTS cli.documento (
  iddocumento INT NOT NULL,
  texto text NULL,
  tipodocumento VARCHAR(15) NOT NULL,
  CONSTRAINT PK_documento PRIMARY KEY (iddocumento));

ALTER TABLE cli.documento
	add column dias int;
-- -----------------------------------------------------
-- Table consulta
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.consulta ;

CREATE TABLE IF NOT EXISTS cli.consulta (
  idpaciente INT NOT NULL,
  iddentista INT NOT NULL,
  idanamnese INT NULL,
  idodontograma INT NULL,
  dataConsulta DATE NOT NULL,
  iddocumento INT NULL,
  idconsulta INT NOT NULL,
  CONSTRAINT PK_consulta PRIMARY KEY (idconsulta),
  CONSTRAINT AK_pk_consulta UNIQUE (idpaciente, iddentista, dataConsulta), 
  CONSTRAINT FK_anamnese_consulta FOREIGN KEY (idanamnese) REFERENCES cli.anamnese,
  CONSTRAINT FK_odontograma_consutla FOREIGN KEY (idodontograma) REFERENCES cli.odontograma,
  CONSTRAINT FK_documento_consulta FOREIGN KEY (iddocumento) REFERENCES cli.documento,
  CONSTRAINT FK_pessoa_consulta	FOREIGN KEY (idpaciente) REFERENCES cli.pessoa);

-- -----------------------------------------------------
-- Table receita
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.receita ;

CREATE TABLE IF NOT EXISTS cli.receita (
  idreceita INT NOT NULL,
  idconsulta INT NULL,
  CONSTRAINT PK_idreceita PRIMARY KEY (idreceita),
  CONSTRAINT FK_consulta_receita FOREIGN KEY (idconsulta) REFERENCES cli.consulta);


-- -----------------------------------------------------
-- Table dente
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.dente ;

CREATE TABLE IF NOT EXISTS cli.dente (
  iddente INT NOT NULL,
  descricao VARCHAR(70) NULL,
  CONSTRAINT PK_iddente PRIMARY KEY (iddente));


-- -----------------------------------------------------
-- Table procedimento
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.procedimento ;

CREATE TABLE IF NOT EXISTS cli.procedimento (
  idprocedimento INT NOT NULL,
  descricao VARCHAR(150) NOT NULL,
  CONSTRAINT PK_idprocedimento PRIMARY KEY (idprocedimento));


-- -----------------------------------------------------
-- Table tipoFace
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.tipoFace ;

CREATE TABLE IF NOT EXISTS cli.tipoFace (
  idtipoface VARCHAR(1) NOT NULL,
  descricao VARCHAR(45) NOT NULL,
  CONSTRAINT PK_idtipoface PRIMARY KEY (idtipoface));


-- -----------------------------------------------------
-- Table imagem
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.imagem ;

CREATE TABLE IF NOT EXISTS cli.imagem (
  idimagem INT NOT NULL,
  tipo CHAR NOT NULL,
  urlImagem VARCHAR(45) NOT NULL,
  idpaciente INT NOT NULL,
  CONSTRAINT PK_idimagem PRIMARY KEY (idimagem),
  CONSTRAINT FK_pessoa_imagem FOREIGN KEY (idpaciente) REFERENCES cli.pessoa);

-- -----------------------------------------------------
-- Table rConvenioPaciente
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.rConvenioPaciente ;

CREATE TABLE IF NOT EXISTS cli.rConvenioPaciente (
  idconvenio INT NOT NULL,
  idpaciente INT NOT NULL,
  CONSTRAINT FK_pessoa_convenioPaciente FOREIGN KEY (idpaciente) REFERENCES cli.pessoa,
  CONSTRAINT FK_convenio_convenioPaciente FOREIGN KEY (idconvenio) REFERENCES cli.convenio,
  CONSTRAINT PK_rConvenioPaciente PRIMARY KEY (idconvenio, idpaciente));


-- -----------------------------------------------------
-- Table rReceitaMedicamento
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.rReceitaMedicamento ;

CREATE TABLE IF NOT EXISTS cli.rReceitaMedicamento (
  idreceita INT NOT NULL,
  idmedicamento INT NOT NULL,
  formaUso VARCHAR(100) NULL,
  CONSTRAINT PK_rReceitaMedicamento PRIMARY KEY (idreceita, idmedicamento),
  CONSTRAINT FK_medicamento_rReceitaMedicamento	FOREIGN KEY (idmedicamento) REFERENCES cli.medicamento);


-- -----------------------------------------------------
-- Table faceDente
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.faceDente ;

CREATE TABLE IF NOT EXISTS cli.faceDente (
  idtipoface VARCHAR(1) NOT NULL,
  iddente INT NOT NULL,
  CONSTRAINT PK_faceDente PRIMARY KEY (idtipoface, iddente),
  CONSTRAINT FK_dente_faceDente FOREIGN KEY (iddente) REFERENCES cli.dente,
  CONSTRAINT FK_tipoface_faceDente FOREIGN KEY (idtipoface) REFERENCES cli.tipoface);


-- -----------------------------------------------------
-- Table rOdontogramaFaceDente
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.rOdontogramaFaceDente ;

CREATE TABLE IF NOT EXISTS cli.rOdontogramaFaceDente (
  idodontograma INT NOT NULL,
  idtipoface VARCHAR(1) NOT NULL,
  iddente INT NOT NULL,
  CONSTRAINT PK_rOdontogramaFaceDente PRIMARY KEY (idodontograma, idtipoface, iddente),
  CONSTRAINT FK_tipoface_rOdontogramaFaceDente FOREIGN KEY (idtipoface) REFERENCES cli.tipoface,
  CONSTRAINT FK_dente_rOdontogramaFaceDente FOREIGN KEY (iddente) REFERENCES cli.dente);


-- -----------------------------------------------------
-- Table rOdontogramaFaceDenteProcedimento
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.rOdontogramaFaceDenteProcedimento;

CREATE TABLE IF NOT EXISTS cli.rOdontogramaFaceDenteProcedimento (
  idtipoface VARCHAR(1) NOT NULL,
  iddente INT NOT NULL,
  idodontograma INT NOT NULL,
  idprocedimento INT NOT NULL,
  observacao TEXT NULL,
  dataProcedimento DATE NOT NULL,
  status CHAR(1) NULL,
  CONSTRAINT PK_rProcedimentoOdontogramaFaceDente PRIMARY KEY (idtipoface, iddente, idprocedimento, idodontograma),
  CONSTRAINT CK_rFaceProced_status CHECK (UPPER(status) in ('A','R','F')),  
  CONSTRAINT FK_rOdontogramaFaceDenteProcedimento1 FOREIGN KEY (idodontograma,idtipoface,iddente) REFERENCES cli.rOdontogramaFaceDente(idodontograma,idtipoface,iddente),
  CONSTRAINT FK_procedimento_rFaceProced FOREIGN KEY (idprocedimento) REFERENCES cli.procedimento);

-- -----------------------------------------------------
-- Table rImagemFaceDente
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.rImagemFaceDente ;

CREATE TABLE IF NOT EXISTS cli.rImagemFaceDente (
  idimagem INT NOT NULL,
  idtipoface VARCHAR(1) NOT NULL,
  iddente INT NOT NULL,
  CONSTRAINT PK_rImagemFaceDente PRIMARY KEY (idimagem, idtipoface, iddente),
  CONSTRAINT FK_tipoface_rImagemFaceDente FOREIGN KEY (idtipoface) REFERENCES cli.tipoface,
  CONSTRAINT FK_dente_rImagemFaceDente FOREIGN KEY (iddente) REFERENCES cli.dente);

-- -----------------------------------------------------
-- Table diagnostico
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.diagnostico ;

CREATE TABLE IF NOT EXISTS cli.diagnostico (
  iddiagnostico INT NOT NULL,
  descricao VARCHAR(45) NULL,
  CONSTRAINT PK_diagnostico PRIMARY KEY (iddiagnostico));

-- -----------------------------------------------------
-- Table rFaceDiagnostico
-- -----------------------------------------------------
DROP TABLE IF EXISTS cli.rOdontogramaFaceDenteDiagnostico ;

CREATE TABLE IF NOT EXISTS cli.rOdontogramaFaceDenteDiagnostico (
  idodontograma INT NOT NULL,
  iddiagnostico INT NOT NULL,
  idtipoface VARCHAR(1) NOT NULL,
  iddente INT NOT NULL,
  CONSTRAINT PK_rFaceDiagnostico PRIMARY KEY (iddiagnostico, idtipoface, iddente, idodontograma),
  CONSTRAINT FK_rOdontogramaFaceDenteDiagnostico1 FOREIGN KEY (idodontograma, idtipoface,iddente) REFERENCES cli.rOdontogramaFaceDente(idodontograma,idtipoface,iddente),
  CONSTRAINT FK_rOdontogramaFaceDenteDiagnostico4 FOREIGN KEY (iddiagnostico) REFERENCES cli.diagnostico);